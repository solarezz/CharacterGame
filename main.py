import telebot
from telebot import types
import database

API_TOKEN = '7006081046:AAFPbndJeFGBR4_tTQXHcItRZ0F4NJ4PsJw'

bot = telebot.TeleBot(API_TOKEN)

id = [0]
name = ['0']
username = ['0']

@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    message_ =  f'‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬´¬´‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n'\
                f'      –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} \n'\
                f'      –ë–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è: \n'\
                f'      @solarezzov –∏ @klovedzz\n'\
                f'\n'\
                f'      –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @solarezzov \n'\
                f'‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬´¬´‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ'
    markup = types.InlineKeyboardMarkup()
    button_profile = types.InlineKeyboardButton('üìã –ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')
    button_partner = types.InlineKeyboardButton('üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä', callback_data='partner')
    button_pet = types.InlineKeyboardButton('üêæ –ü–∏—Ç–æ–º–µ—Ü', callback_data='pet')
    markup.row(button_profile, button_pet, button_partner)
    bot.reply_to(message, message_, reply_markup=markup)
    try:
        database.db_table_val(user_id=message.from_user.id, user_name=message.from_user.first_name, user_nameid=message.from_user.username)
    except:
        pass

@bot.message_handler(func=lambda message: database.db_info(message.chat.id)[4] == 0)
def handle_id_input(message):
    markup = types.InlineKeyboardMarkup()
    button_yes = types.InlineKeyboardButton('‚úîÔ∏è –î–∞', callback_data='yes')
    button_no = types.InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data='no')
    markup.row(button_yes, button_no)
    part = message.text
    name[0] = message.from_user.first_name
    id[0] = message.chat.id
    username[0] = message.from_user.username
    database.request_partner_id(part, message.chat.id)
    try:
        bot.send_message(part, "üì® –í–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ", reply_markup=markup)
    except:
        bot.reply_to(message, "‚ö†Ô∏è id –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
@bot.message_handler(func=lambda message: database.db_info(message.chat.id)[4] > 0 and database.db_info(message.chat.id)[3] != "–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –≤—ã–±—Ä–∞–Ω" and database.db_info(message.chat.id)[3] == '–ü–∏—Ç–æ–º—Ü–∞ –Ω–µ—Ç')
def handle_petname_input(message):
    database.petname_update(message.text, message.chat.id)
    database.petname_update(message.text, database.db_info(message.chat.id)[4])
    bot.send_message(message.chat.id, f'‚ù§Ô∏è –í—ã –ø—Ä–∏—Å–≤–æ–∏–ª–∏ –ø–∏—Ç–æ–º—Ü—É –∏–º—è - "{database.db_info(message.chat.id)[3]}"')
    bot.send_message(database.db_info(message.chat.id)[4], f'‚ù§Ô∏è –ü–∞—Ä—Ç–Ω—ë—Ä –ø—Ä–∏—Å–≤–æ–∏–ª –∏–º—è –ø–∏—Ç–æ–º—Ü—É - "{database.db_info(message.chat.id)[3]}"')
    
def choice_pet(message):
    markup = types.InlineKeyboardMarkup()
    button_dog = types.InlineKeyboardButton('üê∂ –°–æ–±–∞–∫–∞', callback_data='dog')
    button_cat = types.InlineKeyboardButton('üê± –ö–æ—Ç', callback_data='cat')
    button_squirrel = types.InlineKeyboardButton('üêøÔ∏è –ë–µ–ª–∫–∞', callback_data='squirrel')
    button_hamster = types.InlineKeyboardButton('üêπ –•–æ–º—è–∫', callback_data='hamster')
    button_turtle = types.InlineKeyboardButton('üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞', callback_data='turtle')
    button_parrot = types.InlineKeyboardButton('ü¶ú –ü–æ–ø—É–≥–∞–π', callback_data='parrot')
    markup.add(button_dog, button_cat, button_squirrel)
    markup.add(button_hamster, button_turtle, button_parrot)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞: ", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    bot.answer_callback_query(call.id)
    if call.data == 'profile':
        profile_function(call.message)
    elif call.data == 'pet':
        if database.db_info(call.message.chat.id)[4] == 0:
            bot.send_message(call.message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞!")
        else:
            choice_pet(call.message)
    elif call.data == 'partner':
        if database.db_info(call.message.chat.id)[4] > 0:
            bot.send_message(call.message.chat.id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–∞—Ä—Ç–Ω—ë—Ä—É:\n–í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä: {database.db_info(call.message.chat.id)[8]} ")
        else:
            bot.send_message(call.message.chat.id, "‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ [ID] –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
    elif call.data == 'yes':
        profile_partner(call.message)
    elif call.data == 'no':
        bot.send_message(call.message.chat.id, 'üö´ –í–∞–º –æ—Ç–∫–∞–∑–∞–ª–∏ –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–µ')
        database.request_partner_id(0, call.message.chat.id)
    elif call.data == 'dog':
        markup = types.InlineKeyboardMarkup()
        button_yesdog = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesdog')
        button_nodog = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
        markup.row(button_yesdog, button_nodog)
        bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
        bot.send_message(database.db_info(call.message.chat.id)[4], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üê∂ –°–æ–±–∞–∫–∞". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
    elif call.data == 'cat':
        markup = types.InlineKeyboardMarkup()
        button_yescat = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yescat')
        button_nocat = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
        markup.row(button_yescat, button_nocat)
        bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
        bot.send_message(database.db_info(call.message.chat.id)[4], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üê± –ö–æ—Ç". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
    elif call.data == 'squirrel':
        markup = types.InlineKeyboardMarkup()
        button_yesbelka = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesbelka')
        button_nobelka = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
        markup.row(button_yesbelka, button_nobelka)
        bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
        bot.send_message(database.db_info(call.message.chat.id)[4], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üêøÔ∏è –ë–µ–ª–∫–∞". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
    elif call.data == 'hamster':
        markup = types.InlineKeyboardMarkup()
        button_yeshamster = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yeshamster')
        button_nohamster = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
        markup.row(button_yeshamster, button_nohamster)
        bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
        bot.send_message(database.db_info(call.message.chat.id)[4], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üêπ –•–æ–º—è–∫". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
    elif call.data == 'turtle':
        markup = types.InlineKeyboardMarkup()
        button_yesturtle = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesturtle')
        button_noturtle = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
        markup.row(button_yesturtle, button_noturtle)
        bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
        bot.send_message(database.db_info(call.message.chat.id)[4], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
    elif call.data == 'parrot':
        markup = types.InlineKeyboardMarkup()
        button_yesparrot = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesparrot')
        button_noparrot = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
        markup.row(button_yesparrot, button_noparrot)
        bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
        bot.send_message(database.db_info(call.message.chat.id)[4], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "ü¶ú –ü–æ–ø—É–≥–∞–π". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
    elif call.data == 'yesdog':
        database.pet_update("üê∂ –°–æ–±–∞–∫–∞", call.message.chat.id)
        database.pet_update("üê∂ –°–æ–±–∞–∫–∞", database.db_info(call.message.chat.id)[4])
        bot.send_message(database.db_info(call.message.chat.id)[4], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}.\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        bot.send_message(call.message.chat.id, f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}')
    elif call.data == 'yescat':
        database.pet_update("üê± –ö–æ—Ç", call.message.chat.id)
        database.pet_update("üê± –ö–æ—Ç", database.db_info(call.message.chat.id)[4])
        bot.send_message(database.db_info(call.message.chat.id)[4], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}.\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        bot.send_message(call.message.chat.id, f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}')
    elif call.data == 'yesbelka':
        database.pet_update("üêøÔ∏è –ë–µ–ª–∫–∞", call.message.chat.id)
        database.pet_update("üêøÔ∏è –ë–µ–ª–∫–∞", database.db_info(call.message.chat.id)[4])
        bot.send_message(database.db_info(call.message.chat.id)[4], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}.\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        bot.send_message(call.message.chat.id, f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}')
    elif call.data == 'yeshamster':
        database.pet_update("üêπ –•–æ–º—è–∫", call.message.chat.id)
        database.pet_update("üêπ –•–æ–º—è–∫", database.db_info(call.message.chat.id)[4])
        bot.send_message(database.db_info(call.message.chat.id)[4], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}.\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        bot.send_message(call.message.chat.id, f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}')
    elif call.data == 'yesturtle':
        database.pet_update("üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞", call.message.chat.id)
        database.pet_update("üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞", database.db_info(call.message.chat.id)[4])
        bot.send_message(database.db_info(call.message.chat.id)[4], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}.\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        bot.send_message(call.message.chat.id, f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}')
    elif call.data == 'yesparrot':
        database.pet_update("ü¶ú –ü–æ–ø—É–≥–∞–π", call.message.chat.id)
        database.pet_update("ü¶ú –ü–æ–ø—É–≥–∞–π", database.db_info(call.message.chat.id)[4])
        bot.send_message(database.db_info(call.message.chat.id)[4], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}.\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        bot.send_message(call.message.cht.id, f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {database.db_info(call.message.chat.id)[2]}')
    elif call.data == 'notapprove':
        bot.send_message(call.message.chat.id, "‚ùå –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –Ω–µ –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä.")
        
def profile_partner(message):
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text= "ü§ùüèª –í—ã —Ç–µ–ø–µ—Ä—å –ø–∞—Ä—Ç–Ω–µ—Ä—ã")
    bot.send_message(id[0], "ü§ùüèª –í—ã —Ç–µ–ø–µ—Ä—å –ø–∞—Ä—Ç–Ω–µ—Ä—ã")
    database.db_partner(database.db_info(message.chat.id)[0], database.db_info(message.chat.id)[1], id[0], database.db_info(message.chat.id)[7])
    database.db_partner(id[0], name[0], message.chat.id, username[0])
    database.request_partner_id(0, id[0])
    
def profile_function(message):
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=
'‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª\n'\
f'| üìã –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n'\
f'| üë§ –ò–º—è - {database.db_info(message.chat.id)[1]}\n'\
f'| üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω–µ—Ä - {database.db_info(message.chat.id)[5]}\n'\
f'| üêæ –ü–∏—Ç–æ–º–µ—Ü - {database.db_info(message.chat.id)[3]}\n'\
'|‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n'\
'| üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–∏—Ç–æ–º—Ü—É:\n'\
f'| üî† –ò–º—è –ø–∏—Ç–æ–º—Ü–∞ - \n'\
f'| üåç –ú–µ—Å—Ç–æ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - \n'\
f'| ü©∫ –ó–¥–æ—Ä–æ–≤—å–µ -  \n'\
f'| üçΩÔ∏è –ï–¥–∞ - \n'\
f'| üí¶ –í–æ–¥–∞ - \n'\
'‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª')


bot.infinity_polling()
print("bot started")